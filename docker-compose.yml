version: '3'

volumes:
  dbdata:
    driver: local

networks:
  service:
    driver: bridge

services:
  proxy:
    build:
      context: ./proxy
      dockerfile: .deploy/Dockerfile
    container_name: ${USER:-www}-proxy-dev
    image: ${USER:-www}/proxy-dev
    environment:
      NGINX_SERVER: ${NGINX_SERVER:-localhost}
      FRONTEND_PORT: ${FRONTEND_PORT:-3000}
    depends_on:
      - backend-api
      - adminer
      - frontend
    volumes:
      - ./backend/laravel:/app
      - ./proxy/default.conf:/etc/nginx/templates/default.conf.template
    ports:
      - "${NGINX_PORT:-80}:80"
    networks:
      - service

  backend:
    build:
      context: ./backend
      dockerfile: .deploy/Dockerfile
      args:
        USER: ${USER:-www}
    container_name: ${USER:-www}-backend-dev
    image: ${USER:-www}/backend-dev
    depends_on:
      - db
    volumes:
      - ./backend/laravel:/app
    networks:
      - service

  backend-api:
    build:
      context: ./backend
      dockerfile: .deploy/nginx/Dockerfile
    image: ${USER:-www}/backend-api-dev
    container_name: ${USER:-www}-backend-api-dev
    volumes:
      - ./backend/laravel:/app
      - ./backend/.deploy/nginx/conf.d/default.conf:/etc/nginx/templates/default.conf.template
      - ./backend/nginx.logs/access.log:/var/log/nginx/access.log
      - ./backend/nginx.logs/error.log:/var/log/nginx/error.log
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - service

  db:
    image: postgres:15-alpine3.17
    container_name: ${USER:-www}-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-laravel}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-QWEasd123@}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
    volumes:
      - dbdata:/var/lib/postgres
    networks:
      - service

  db-test:
    image: postgres:15-alpine3.17
    environment:
      POSTGRES_PASSWORD: QWEasd123@

  adminer:
    image: adminer
    restart: unless-stopped
    container_name: ${USER:-www}-adminer
    networks:
      - service

  frontend:
    build:
      context: ./frontend
      dockerfile: .deploy/dev.Dockerfile
      args:
        FRONTEND_PORT: ${FRONTEND_PORT:-3000}
    image: ${USER:-www}/frontend-dev
    container_name: ${USER:-www}-frontend-dev
    environment:
      PORT: ${FRONTEND_PORT:-3000}
    restart: unless-stopped
    networks:
      - service